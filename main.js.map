{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/product.service.ts","webpack:///./src/app/read-product/read-product.component.css","webpack:///./src/app/read-product/read-product.component.html","webpack:///./src/app/read-product/read-product.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!-- container -->\\n<div class=\\\"container\\\">\\n \\n    <!-- show page header -->\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class='page-header'><h1>perfect  web solution</h1></div>\\n        </div>\\n    </div>\\n \\n    <!-- Show this view if \\\"show_read_products_html\\\" property of AppComponent is true. -->\\n    <app-read-products>\\n    </app-read-products>\\n \\n</div>\\n<!-- /container -->\"","import { Component } from '@angular/core';\n \n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\n \nexport class AppComponent {\n    title=\"Read Products\";\n    product_id;\n    show_read_products_html=true;\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ReadProductsComponent } from './read-product/read-product.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ReadProductsComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Observable} from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Product } from './product';\nimport { map } from 'rxjs/operators';\n \n@Injectable()\n \n// Service for products data.\nexport class ProductService {\n \n    // We need Http to talk to a remote server.\n    constructor(private _http : Http){ }\n \n    // Get list of products from remote server.\n    readProducts(): Observable<Product[]>{\n \n        return this._http\n            .get(\"http://localhost/api/product/read.php\")\n            .pipe(map((res: Response) => res.json()));\n    }\n\n\n    // Send product data to remote server to create it.\ncreateProduct(product): Observable<Product>{\n \n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n \n    return this._http.post(\n        \"http://localhost/api/product/create.php\",\n        product,\n        options\n    ).pipe(map((res: Response) => res.json()));\n}\n \n}","module.exports = \"\"","module.exports = \"<div class=\\\"row m-b-18px\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <!-- button to create new product -->\\n        <a (click)=\\\"createProduct()\\\" class='btn btn-primary pull-right'>\\n            <span class='glyphicon glyphicon-plus'></span> Create Product\\n        </a>\\n    </div>\\n</div>\\n \\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n \\n        <!-- HTML table for our list of product records -->\\n        <table class='table table-hover table-responsive table-bordered'>\\n \\n            <tr>\\n                <th>Product</th>\\n                <th>Price</th>\\n                <th>Description</th>\\n                <th>Category</th>\\n                <th>Actions</th>\\n            </tr>\\n \\n            <!-- Use *ngFor directive to loop throught our list of products. -->\\n            <!-- <tr *ngFor=\\\"let product of products\\\">\\n                <td>{{product.name}}</td>\\n                <td>{{product.price}}</td>\\n                <td>{{product.description}}</td>\\n                <td>{{product.category_name}}</td>\\n                <td>\\n                    read one product button\\n                    <a (click)=\\\"readOneProduct(product.id)\\\" class='btn btn-primary m-r-5px'>\\n                        <span class='glyphicon glyphicon-eye-open'></span> Read\\n                    </a>\\n             \\n                    edit product button\\n                    <a (click)=\\\"updateProduct(product.id)\\\" class='btn btn-info m-r-5px'>\\n                        <span class='glyphicon glyphicon-edit'></span> Edit\\n                    </a>\\n             \\n                    delete product button\\n                    <a (click)=\\\"deleteProduct(product.id)\\\" class='btn btn-danger m-r-5px'>\\n                        <span class='glyphicon glyphicon-remove'></span> Delete\\n                    </a>\\n                </td>\\n            </tr> -->\\n        </table>\\n    </div>\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ProductService } from '../product.service';\nimport { Observable} from 'rxjs';\nimport { Product } from '../product';\n \n@Component({\n    selector: 'app-read-products',\n    templateUrl: './read-product.component.html',\n    styleUrls: ['./read-product.component.css'],\n    providers: [ProductService]\n})\n \nexport class ReadProductsComponent implements OnInit {\n \n    // store list of products\n    products: Product[];\n \n    // initialize productService to retrieve list products in the ngOnInit()\n    constructor(private productService: ProductService){}\n \n    // methods that we will use later\n    createProduct(){}\n    readOneProduct(id){}\n    updateProduct(id){}\n    deleteProduct(id){}\n \n    // Read products from API.\n    ngOnInit(){\n        this.productService.readProducts()\n            .subscribe(products =>\n                this.products=products['records']\n            );\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}